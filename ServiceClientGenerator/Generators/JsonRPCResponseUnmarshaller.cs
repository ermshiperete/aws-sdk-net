// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace ServiceClientGenerator.Generators
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class JsonRPCResponseUnmarshaller : BaseResponseUnmarshaller
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 6 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"

    AddLicenseHeader();

    AddCommonUsingStatements();

            
            #line default
            #line hidden
            this.Write("using ThirdParty.Json.LitJson;\r\n\r\nnamespace ");
            
            #line 13 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Config.Namespace));
            
            #line default
            #line hidden
            this.Write(".Model.Internal.MarshallTransformations\r\n{\r\n    /// <summary>\r\n    /// Response U" +
                    "nmarshaller for ");
            
            #line 16 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.UnmarshallerBaseName));
            
            #line default
            #line hidden
            this.Write(" operation\r\n    /// </summary>  \r\n    public class ");
            
            #line 18 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.UnmarshallerBaseName));
            
            #line default
            #line hidden
            this.Write("ResponseUnmarshaller : JsonResponseUnmarshaller\r\n    {\r\n        public override A" +
                    "mazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context)\r\n        {\r\n" +
                    "            ");
            
            #line 22 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.UnmarshallerBaseName));
            
            #line default
            #line hidden
            this.Write("Response response = new ");
            
            #line 22 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Operation.Name));
            
            #line default
            #line hidden
            this.Write("Response();\r\n\r\n");
            
            #line 24 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"

    if( this.Operation.ResponseHasBodyMembers )
    {
        if (this.Operation.ResponseStructure.Payload != null)
        {

            
            #line default
            #line hidden
            this.Write("            var unmarshaller = ");
            
            #line 30 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Operation.ResponseBodyMembers[0].DetermineTypeUnmarshallerInstantiate()));
            
            #line default
            #line hidden
            this.Write(";\r\n            response.");
            
            #line 31 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Operation.ResponseBodyMembers[0].PropertyName));
            
            #line default
            #line hidden
            this.Write(" = unmarshaller.Unmarshall(context);\r\n");
            
            #line 32 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"

        }
		else if(this.IsWrapped)
		{

            
            #line default
            #line hidden
            this.Write("\t\t\tresponse.");
            
            #line 37 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.WrappedResultMember));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 37 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Structure.Name));
            
            #line default
            #line hidden
            this.Write("Unmarshaller.Instance.Unmarshall(context);\r\n");
            
            #line 38 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"

		}
        else
        {

            
            #line default
            #line hidden
            this.Write("            context.Read();\r\n            int targetDepth = context.CurrentDepth;\r" +
                    "\n            while (context.ReadAtDepth(targetDepth))\r\n            {\r\n");
            
            #line 47 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"

        
            foreach (var member in this.Operation.ResponseBodyMembers)
            {

            
            #line default
            #line hidden
            this.Write("                if (context.TestExpression(\"");
            
            #line 52 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.MarshallName));
            
            #line default
            #line hidden
            this.Write("\", targetDepth))\r\n                {\r\n                    var unmarshaller = ");
            
            #line 54 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.DetermineTypeUnmarshallerInstantiate()));
            
            #line default
            #line hidden
            this.Write(";\r\n                    response.");
            
            #line 55 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.PropertyName));
            
            #line default
            #line hidden
            this.Write(" = unmarshaller.Unmarshall(context);\r\n                    continue;\r\n            " +
                    "    }\r\n");
            
            #line 58 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"

            }

            
            #line default
            #line hidden
            this.Write("            }\r\n");
            
            #line 62 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"

        }
    }
	UnmarshallHeaders();
	ProcessStatusCode();
	ProcessResponseStream();

            
            #line default
            #line hidden
            this.Write(@"
            return response;
        }

        public override AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode)
        {
            ErrorResponse errorResponse = JsonErrorResponseUnmarshaller.GetInstance().Unmarshall(context);
");
            
            #line 76 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"

    foreach (var exception in this.Operation.Exceptions)
    {

            
            #line default
            #line hidden
            this.Write("            if (errorResponse.Code != null && errorResponse.Code.Equals(\"");
            
            #line 80 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(exception.Code));
            
            #line default
            #line hidden
            this.Write("\"))\r\n            {\r\n                return new ");
            
            #line 82 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(exception.Name));
            
            #line default
            #line hidden
            this.Write("(errorResponse.Message, innerException, errorResponse.Type, errorResponse.Code, e" +
                    "rrorResponse.RequestId, statusCode);\r\n            }\r\n");
            
            #line 84 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"

    }

            
            #line default
            #line hidden
            this.Write("            return new Amazon");
            
            #line 87 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Config.BaseName));
            
            #line default
            #line hidden
            this.Write("Exception(errorResponse.Message, innerException, errorResponse.Type, errorRespons" +
                    "e.Code, errorResponse.RequestId, statusCode);\r\n        }\r\n\r\n");
            
            #line 90 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"
	if(this.Operation.ResponseStreamingMember != null) {
            
            #line default
            #line hidden
            this.Write("        internal override bool HasStreamingProperty\r\n        {\r\n            get\r\n" +
                    "            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n");
            
            #line 99 "C:\codebase\GitBranches\Master\sdk\src\ServiceClientGenerator\Generators\JsonRPCResponseUnmarshaller.tt"

	}
    this.AddResponseSingletonMethod();

            
            #line default
            #line hidden
            this.Write("    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
